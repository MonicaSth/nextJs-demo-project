{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\stuhl\\\\Desktop\\\\Programare\\\\React\\\\Next js refacut\\\\pages\\\\[meetupId]\\\\index.js\";\n// import { MongoClient, ObjectId } from \"mongodb\";\n// import { Fragment } from \"react\";\n// import Head from \"next/head\";\nimport { Fragment } from \"react\"; // import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  //   return (\n  //     <Fragment>\n  //       <Head>\n  //         <title>{props.meetupData.title}</title>\n  //         <meta name=\"description\" content={props.meetupData.description} />\n  //       </Head>\n  //       <MeetupDetail\n  //         image={props.meetupData.image}\n  //         title={props.meetupData.title}\n  //         address={props.meetupData.address}\n  //         description={props.meetupData.description}\n  //       />\n  //     </Fragment>\n  //   );\n  // }\n  // export async function getStaticPaths() {\n  //   const client = await MongoClient.connect(\n  //     \"mongodb+srv://mstuhlmuller:QmD0wAWYwgZPIKOq@cluster0.4x53108.mongodb.net/?retryWrites=true&w=majority\"\n  //   );\n  //   const db = client.db();\n  //   const meetupsCollection = db.collection(\"meetups\");\n  //   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  //   client.close();\n  //   return {\n  //     fallback: \"blocking\",\n  //     paths: meetups.map((meetup) => ({\n  //       params: { meetupId: meetup._id.toString() },\n  //     })),\n  //   };\n  // }\n  // export async function getStaticProps(context) {\n  //   // fetch data for a single meetup\n  //   const meetupId = context.params.meetupId;\n  //   const client = await MongoClient.connect(\n  //     \"mongodb+srv://mstuhlmuller:QmD0wAWYwgZPIKOq@cluster0.4x53108.mongodb.net/?retryWrites=true&w=majority\"\n  //   );\n  //   const db = client.db();\n  //   const meetupsCollection = db.collection(\"meetups\");\n  //   const selectedMeetup = await meetupsCollection.findOne({\n  //     _id: ObjectId(meetupId),\n  //   });\n  //   client.close();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      sec: \"https://digitalnomads.world/wp-content/uploads/2021/11/Timisoara-digital-nomads.jpg\",\n      alt: \"A first Meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"A first meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n      children: \"Street Street no 5 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" The meetup description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this); // {\n  // props: {\n  //   meetupData: {\n  //     id: selectedMeetup._id.toString(),\n  //     title: selectedMeetup.title,\n  //     address: selectedMeetup.address,\n  //     image: selectedMeetup.image,\n  //     description: selectedMeetup.description,\n  //   },\n  // },\n  // };\n}\n\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/stuhl/Desktop/Programare/React/Next js refacut/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetails","props"],"mappings":";;AAAA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE;AACE,MAAA,GAAG,EAAC,qFADN;AAEE,MAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAvD4B,CAmE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,eAAeD,aAAf","sourcesContent":["// import { MongoClient, ObjectId } from \"mongodb\";\r\n// import { Fragment } from \"react\";\r\n// import Head from \"next/head\";\r\n\r\nimport { Fragment } from \"react\";\r\n\r\n// import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  //   return (\r\n  //     <Fragment>\r\n  //       <Head>\r\n  //         <title>{props.meetupData.title}</title>\r\n  //         <meta name=\"description\" content={props.meetupData.description} />\r\n  //       </Head>\r\n  //       <MeetupDetail\r\n  //         image={props.meetupData.image}\r\n  //         title={props.meetupData.title}\r\n  //         address={props.meetupData.address}\r\n  //         description={props.meetupData.description}\r\n  //       />\r\n  //     </Fragment>\r\n  //   );\r\n  // }\r\n\r\n  // export async function getStaticPaths() {\r\n  //   const client = await MongoClient.connect(\r\n  //     \"mongodb+srv://mstuhlmuller:QmD0wAWYwgZPIKOq@cluster0.4x53108.mongodb.net/?retryWrites=true&w=majority\"\r\n  //   );\r\n  //   const db = client.db();\r\n\r\n  //   const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  //   client.close();\r\n\r\n  //   return {\r\n  //     fallback: \"blocking\",\r\n  //     paths: meetups.map((meetup) => ({\r\n  //       params: { meetupId: meetup._id.toString() },\r\n  //     })),\r\n  //   };\r\n  // }\r\n\r\n  // export async function getStaticProps(context) {\r\n  //   // fetch data for a single meetup\r\n\r\n  //   const meetupId = context.params.meetupId;\r\n\r\n  //   const client = await MongoClient.connect(\r\n  //     \"mongodb+srv://mstuhlmuller:QmD0wAWYwgZPIKOq@cluster0.4x53108.mongodb.net/?retryWrites=true&w=majority\"\r\n  //   );\r\n  //   const db = client.db();\r\n\r\n  //   const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //   const selectedMeetup = await meetupsCollection.findOne({\r\n  //     _id: ObjectId(meetupId),\r\n  //   });\r\n\r\n  //   client.close();\r\n\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        sec=\"https://digitalnomads.world/wp-content/uploads/2021/11/Timisoara-digital-nomads.jpg\"\r\n        alt=\"A first Meetup\"\r\n      />\r\n      <h1>A first meetup</h1>\r\n      <address>Street Street no 5 </address>\r\n      <p> The meetup description</p>\r\n    </Fragment>\r\n  );\r\n\r\n  // {\r\n  // props: {\r\n  //   meetupData: {\r\n  //     id: selectedMeetup._id.toString(),\r\n  //     title: selectedMeetup.title,\r\n  //     address: selectedMeetup.address,\r\n  //     image: selectedMeetup.image,\r\n  //     description: selectedMeetup.description,\r\n  //   },\r\n  // },\r\n  // };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}